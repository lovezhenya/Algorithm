package programmer.demo;
/* @author  作者 E-mail: * @date 创建时间：2017年7月20日 上午10:56:10 * @version 1.0 * @parameter  * @since  * @return  */
public class RobotII {

	public RobotII() {
		// TODO Auto-generated constructor stub
	}
	public static int countWays(int[][] map, int x, int y) {
        // write code here
		int[][] dp = new int[x][y];
		//System.out.println(dp[0][0]);
		for (int j = 1; j < dp[0].length; j++) {
			if(map[0][j-1] != 1 || (dp[0][j-1] == 0 && (j-1) != 0))
				dp[0][j] = 0;
			else
				dp[0][j] = 1;
			System.out.println("dp[0][" + j +"] = " + dp[0][j]);
		}
		for (int j = 1; j < dp.length; j++) {
			if(map[j-1][0] != 1 || (dp[j-1][0] == 0 && (j-1) != 0))
				dp[j][0] = 0;
			else
				dp[j][0] = 1;
			System.out.println("dp[" + j +"][0] = " + dp[j][0]);
		}
		for(int i = 1; i < dp.length; i++)
		{
			for(int j = 1; j < dp[0].length; j++)
			{
				if(map[i-1][j] != 1 && map[i][j-1] != 1)
					dp[i][j] = 0;
				else if(map[i-1][j] != 1 && map[i][j-1] == 1)
					dp[i][j] = dp[i][j-1];
				else if(map[i-1][j] == 1 && map[i][j-1] != 1)
					dp[i][j] = dp[i-1][j];
				else
					dp[i][j] = (dp[i-1][j] + dp[i][j-1]) % 1000000007;
				System.out.println("dp[" + i +"]" + "[" + j + "] = " + dp[i][j]);
			}
		}
		if(map[x-1][y-1] != 1)
			dp[x-1][y-1] = 0;
		return dp[x-1][y-1];//该方法的漏洞待观察
//		int[][] dp = new int[x][y];
//		for(int i = 0; i < x; i ++){
//            for(int j = 0; j < y; j ++){
//                if(map[i][j] != 1) continue;
//                if(i == 0 && j == 0) dp[0][0] = 1;
//                else if(i != 0 && j == 0) dp[i][0] = dp[i-1][0] ;
//                else if(i == 0 && j != 0) dp[0][j] = dp[0][j-1] ;
//                else{
//                    dp[i][j] = (dp[i][j-1] + dp[i-1][j])%1000000007;
//                    System.out.println("dp[" + i +"]" + "[" + j + "] = " + dp[i][j]);
//                }
//            }
//        }
//        return dp[x-1][y-1];
    }
//    }
	public static void main(String[] args)
	{
		int x = 30,y = 15;
		int[][] map = {
				{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
				{1,1,1,1,1,1,1,1,1,1,0,1,1,1,1},
				{1,1,1,1,1,1,1,1,0,1,1,1,1,1,1},
				{1,1,0,1,1,1,1,1,0,1,1,1,1,1,1},
				{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
				{1,1,1,1,1,1,1,1,0,1,1,1,1,1,1},
				{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
				{1,1,1,1,1,1,1,1,1,1,1,1,0,1,1},
				{1,1,1,1,1,1,1,1,0,1,1,0,1,1,1},
				{1,1,1,1,0,1,1,1,1,1,0,1,1,1,1},
				{1,1,1,1,0,1,1,1,1,0,0,1,1,1,1},
				{1,1,1,0,0,0,1,1,1,1,1,1,1,1,1},
				{1,1,1,1,1,1,1,0,1,1,1,1,1,1,1},
				{1,1,0,1,0,1,0,1,1,1,1,1,1,1,1},
				{1,1,1,0,1,1,1,1,1,1,1,1,1,1,1},
				{1,1,1,1,1,1,1,1,1,0,1,1,1,1,1},
				{1,1,1,1,1,0,1,1,1,1,1,1,1,1,1},
				{1,1,1,1,1,1,1,1,1,1,1,0,1,1,1},
				{1,1,1,1,1,1,1,1,1,1,0,1,1,1,1},
				{0,1,1,1,1,1,0,1,1,1,0,1,1,1,0},
				{1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},
				{0,1,1,1,1,1,1,1,1,1,1,0,1,1,1},
				{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
				{1,1,1,1,1,0,1,0,1,1,1,1,1,1,1},
				{1,1,1,1,1,0,1,1,1,1,1,1,0,1,1},
				{1,1,1,1,1,0,1,1,1,1,1,1,1,1,1},
				{1,1,1,1,1,1,1,1,1,1,1,1,0,1,1},
				{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
				{1,1,0,1,1,0,1,1,1,1,1,0,1,1,1},
				{1,1,1,1,1,1,1,1,1,1,1,1,1,1,0}};
		System.out.println(countWays(map, x, y));
	}
}
